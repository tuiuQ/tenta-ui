@import "./modules";
//.@{container} {
//  .margin(x, auto);
//  .padding(x, auto);
//  .box-sizing();
//  .transition(width .9s cubic-bezier(1, -0.02, 0, 1.04));
//  width: 100%;
//  min-width: 0;
//}

.@{row-name} {
  flex-wrap: wrap;
  min-height: 1px;
  position: relative;
  .box-sizing();
  .clearfix();
}

.@{row-name}--flex {
  display: flex;

  &.@{justify-name}-start {
    justify-content: flex-start;
  }
  &.@{justify-name}-center {
    justify-content: center;
  }
  &.@{justify-name}-end {
    justify-content: flex-end;
  }
  &.@{justify-name}-space-between {
    justify-content: space-between;
  }
  &.@{justify-name}-space-around {
    justify-content: space-around;
  }

  &.@{align-name}-start {
    align-items: flex-start;
  }
  &.@{align-name}-center {
    align-items: center;
  }
  &.@{align-name}-end {
    align-items: flex-end;
  }
}




.col-base-css() {
  .box-sizing();
  position: relative;
  min-height: 1px;
}

.make-grid-columns (@columns);

.make-grid-columns (@len: @columns) {
  .col(@i) {
    @classList: ~"
      .@{columns-name}-xs-@{i},
      .@{columns-name}-sm-@{i},
      .@{columns-name}-md-@{i},
      .@{columns-name}-lg-@{i},
      .@{columns-name}-lx-@{i}
    ";
    .col(@i + 1, ~"@{classList}");
  }
  .col(@i, @list) when (@i =< @len) {
    @classList: ~"
      .@{columns-name}-xs-@{i},
      .@{columns-name}-sm-@{i},
      .@{columns-name}-md-@{i},
      .@{columns-name}-lg-@{i},
      .@{columns-name}-lx-@{i}
    ";
    .col(@i + 1, ~"@{classList}, @{list}");
  }
  .col(@i, @list) when (@i > @len) {
    @{list} {
      .col-base-css();
    }
  }
  .col(1);
}

.generate-columns(xs, @columns);

.generate-columns(@type, @n, @i: 1) when (@i <= @n) {
  @col-class-name: ~"@{columns-name}-@{type}";
  .@{col-class-name}-@{i} {
    width: (@i / @n * 100%);
    float: left;
  }
  .@{col-class-name}-offset-@{i} {
    margin-left: (@i / @n * 100%);
  }
  .@{col-class-name}-push-@{i} {
    left: (@i / @n * 100%);
  }
  .@{col-class-name}-pull-@{i} {
    right: (@i / @n * 100%);
  }
  .generate-columns(@type, @n, (@i + 1));
}

@media (min-width: @screen-sm-min) {
  .generate-columns(sm, @columns);
}
@media (min-width: @screen-md-min) {
  .generate-columns(md, @columns);
}
@media (min-width: @screen-lg-min) {
  .generate-columns(lg, @columns);
}
@media (min-width: @screen-lx-min) {
  .generate-columns(lx, @columns);
}
